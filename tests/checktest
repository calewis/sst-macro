#! /usr/bin/env python

import sys
import os

tests = sys.argv[1:]
cwd = os.getcwd()

fail = False

class bcolors:
    HEADER = '\033[95m'
    OKBLUE = '\033[94m'
    OKGREEN = '\033[92m'
    WARNING = '\033[93m'
    FAIL = '\033[91m'
    ENDC = '\033[0m'
    BOLD = '\033[1m'
    UNDERLINE = '\033[4m'

failures = 0
total = 0
for test in tests:
  chk_file = os.path.join(cwd, test)
  text = open(chk_file).read()
  if not "PASSED" in text:

    failstr = "FAILED"
    errorstr = ""
    if "TIMEOUT" in text:
      failstr = "TIMEOUT" 
    elif "TERMINATED" in text:
      failstr = "TERMINATED"
    elif "ERROR" in text:
      failstr = "ERROR"
      error_file = os.path.splitext(chk_file)[0] + ".tmp-out.ERROR"
      if(os.path.isfile(error_file)):
          with open(error_file) as etext:
              head = etext.readlines()

          head = [line.rstrip() for line in head]
          head = [line for line in head if line]
          errorstr = "\t" + "\n".join(head[:5])

    # Check if there was a diff file generated
    diff_file = os.path.splitext(chk_file)[0] + ".diff"
    if(os.path.isfile(diff_file)):
        failstr = "%s %s with %s" % (diff_file, failstr, "diff")
    else:
        failstr = "%s %s" % (chk_file, failstr)
    print (bcolors.FAIL + failstr + bcolors.ENDC)
    if(errorstr):
        print(errorstr)
    failures += 1
  total += 1

if failures:
  print (bcolors.FAIL + ("%d of %d tests failed" % (failures, total)) + bcolors.ENDC)
  sys.exit(1)
else:
  print (bcolors.OKGREEN + ("All %d tests passed" % total) + bcolors.ENDC)


    

  
