

void memoFxn(int niter);

void memoFxn(int n){
  int sstmac_thr_tag6 = sstmac_startMemoize("memoFxn","linear"); for (int i=0; i < n; ++i);
; sstmac_finish_memoize1(sstmac_thr_tag6,"memoFxn",n);}

int fxn()
{
  int i=0;
  int mul = 0;
  double* x = new double[10];
  int* idx = new int[5];

 int sstmac_thr_tag16 = sstmac_startMemoize("forloop","linear"); for (i=0; i < 5; ++i){
    mul *= i;
    for (int j=0; j < 10; ++j){
      mul += (j-1);
      x[j] += i;
      mul -= x[j];
      j=7;
      mul += x[j];
      mul *= x[idx[i]];
      idx[i] -= 3;
      mul *= x[idx[i]];
    }
  }; sstmac_finish_memoize1(sstmac_thr_tag16,"forloop",5);
  memoFxn(10);
  memoFxn(i+12);
  return 0;
}
#include <sstmac/software/process/cppglobal.h>
#include <sstmac/software/process/memoize.h>

static sstmac::Memoization memoize_forloop("forloop","linear");
static sstmac::Memoization memoize_memoFxn("memoFxn","linear");
